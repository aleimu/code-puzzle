__doc__ = """
P1280 尼克的任务
https://www.luogu.com.cn/problem/P1280
"""

"""
考虑dp
因为要优先选先来的任务,所以正着搜有后效性,于是考虑倒着搜
设dp[i]为第i分钟初到第n分钟末最多可以休息的时间
则用任务时间作为转移条件
若第i分钟有任务开始
则 dp[i]=dp[i+len[j]] (len表示任务时间,j表示任务标号)
否则 dp[i]=dp[i+1]+1
最后dp[1]即为答案
"""
v = [(1, 2), (1, 6), (4, 11), (8, 5), (8, 1), (11, 5)]  # 任务队列
v = {1: (1, 2), 2: (1, 6), 3: (4, 11), 4: (8, 5), 5: (8, 1), 6: (11, 5)}  # 任务队列编号以及开始时间和持续时间
dp = {}  # dp[i]为第i分钟初到第n分钟末最多可以休息的时间
n = 15  # 工作日规定时长为为n分钟


# for x in range(1, n + 3):
#     dp[x] = 1
#
# i = n
# while i > 0:
#     print(dp)
#     # if v[i]:
#     if v.get(i, 0):
#         dp[i] = max(dp[i], dp[i + v[i][1]])
#         # j = 0
#         # while j < v[i][1]:
#         #     print("i, j:", i, j)
#         #     # print("v[i][j]:", v[i][j])
#         #     dp[i] = max(dp[i], dp[i + v[i][1]])
#         #     j = j + 1
#     else:
#         dp[i] = dp[i + 1] + 1
#     i = i - 1

# print(dp)

